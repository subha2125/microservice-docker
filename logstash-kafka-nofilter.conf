# Plugin Configuration. This input will read events from a Kafka topic.
# Ref Link - https://www.elastic.co/guide/en/logstash/current/plugins-inputs-kafka.html

input {

  # file {
    # path => "C:/Users/eshghos/Downloads/Docs/Project/spring-boot-microservices-workshop-master/elk-stack.log"
	# start_position => "beginning"
  # }
   
  kafka {
    bootstrap_servers => "localhost:9092"
    topics => ["employee-details-logs"]
	type => "employee_details"
    #auto_offset_reset => "earliest"
    #decorate_events => true
  }
  
  kafka {
    bootstrap_servers => "localhost:9092"
    topics => ["employee-info-logs"]
	type => "employee_info"
    #auto_offset_reset => "earliest"
    #decorate_events => true
  }
 
}

# Filter Plugin. A filter plugin performs intermediary processing on an event.
# Ref Link - https://www.elastic.co/guide/en/logstash/current/filter-plugins.html



#An output plugin sends event data to a particular destination. Outputs are the final stage in the event pipeline.
# Ref Link - https://www.elastic.co/guide/en/logstash/current/output-plugins.html

output {

  stdout{
    codec => rubydebug
  }
  
  if [type] == "employee_details" {   
   elasticsearch {
    hosts => ["localhost:9200"]
    index => "employee_details-%{+YYYY.MM.dd}"
   }
  }
  
  if [type] == "employee_info" {   
   elasticsearch {
    hosts => ["localhost:9200"]
    index => "employee_info-%{+YYYY.MM.dd}"
   }
  }
  
   
  # elasticsearch {
    # hosts => ["http://localhost:9200"]
    # index => "emp-service-%{+YYYY.MM.dd}"
  # }
}